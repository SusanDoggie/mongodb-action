name: Test
on: [push, pull_request]
env:
  MONGO_DATABASE: miragedb
  MONGO_USERNAME: miragedb
  MONGO_PASSWORD: miragedb
  MONGO_REPLICA_SET: rs0
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node_version: [16]
    env:
      MONGO_HOSTNAME: localhost
    steps:
    - uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node_version }}
    - name: Checkout
      uses: actions/checkout@v3
    - name: Start MongoDB Server
      uses: ./
      with:
        host: ${{ env.MONGO_HOSTNAME }}
        username: ${{ env.MONGO_USERNAME }}
        password: ${{ env.MONGO_PASSWORD }}
        database: ${{ env.MONGO_DATABASE }}
        replica_set: ${{ env.MONGO_REPLICA_SET }}
    - name: Install dependencies
      run: npm install --global yarn && yarn install
    - name: Run tests
      run: yarn jest --roots ./test
  test-container:
    name: Test
    container: 
      image: docker://ubuntu:latest
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node_version: [16]
    env:
      MONGO_HOSTNAME: mongo
    steps:
    - uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node_version }}
    - name: Checkout
      uses: actions/checkout@v3
    - name: Start MongoDB Server
      uses: ./
      with:
        network: ${{ job.container.network }}
        host: ${{ env.MONGO_HOSTNAME }}
        username: ${{ env.MONGO_USERNAME }}
        password: ${{ env.MONGO_PASSWORD }}
        database: ${{ env.MONGO_DATABASE }}
        replica_set: ${{ env.MONGO_REPLICA_SET }}
    - name: Install dependencies
      run: npm install --global yarn && yarn install
    - name: Run tests
      run: yarn jest --roots ./test
